from typing import Any, Optional, ClassVar, Iterable, Generator, Tuple

from scm.plams import Atom, Molecule, Settings

class Bond:
    AR: ClassVar[float] = ...
    atom1: Atom
    atom2: Atom
    order: float
    mol: Molecule
    properties: Settings[Any, Any]
    def __init__(
        self,
        atom1: Optional[Atom] = ...,
        atom2: Optional[Atom] = ...,
        order: float = ...,
        mol: Optional[Molecule] = ...,
        **other: Any
    ) -> None: ...
    def __iter__(self) -> Generator[Atom, None, None]: ...
    def is_aromatic(self) -> bool: ...
    def length(self, unit: str = ...) -> float: ...
    def as_vector(
        self, start: Optional[Atom] = ..., unit: str = ...
    ) -> Tuple[float, float, float]: ...
    def other_end(self, atom: Atom) -> Atom: ...
    def resize(self, moving_atom: Atom, length: float, unit: str = ...) -> None: ...
    def rotate(self, moving_atom: Atom, angle: float, unit: str = ...) -> None: ...

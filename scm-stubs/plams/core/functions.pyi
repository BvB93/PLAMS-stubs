import sys
from os import PathLike
from typing import Optional, Iterable, Union, Any, Callable, Dict, Mapping

from scm.plams import Job, JobManager, Molecule, Settings

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal

ValidFormats = Literal["xyz", "pdb", "mol", "mol2", "rkf"]

config: Settings[str, Any]

def init(
    path: Union[None, str, PathLike[str]] = ...,
    folder: Union[None, str, PathLike[str]] = ...,
    config_settings: Optional[Mapping[str, Any]] = ...,
) -> None: ...
def finish(otherJM: Optional[Iterable[JobManager]] = ...) -> None: ...
def load(filename: Union[str, PathLike[str]]) -> Any: ...
def load_all(
    path: Union[str, PathLike[str]], jobmanager: Optional[JobManager] = ...
) -> Dict[str, Any]: ...
def delete_job(job: Job) -> None: ...
def read_molecules(
    folder: Union[str, PathLike[str]], formats: Optional[ValidFormats] = ...
) -> Dict[str, Molecule]: ...
def log(message: str, level: int = ...) -> None: ...
def add_to_class(classname: type) -> Callable[[Callable[..., Any]], None]: ...
def add_to_instance(instance: object) -> Callable[[Callable[..., Any]], None]: ...
def parse_heredoc(bash_input: str, heredoc_delimit: str = ...) -> str: ...
